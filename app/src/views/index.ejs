<!DOCTYPE html>
<html lang="ko">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
</head>

<body>
  <div>
    <canvas id="profiler" class="" style="height: 600px; width: 20px;"></canvas>
  </div>
  
  <form action="/" method="POST" enctype="multipart/form-data">
    <input type="file" name="datafile">
    <input type="number" name="coreNum" placeholder="coreNum">
    <input type="number" name="taskNum" placeholder="taskNum">
    <input type="submit">
  </form>

  <!-- 코어 버튼 추가되는 위치 -->
  <div id="coreButtons"></div>
  <br>
  <!-- 태스크 버튼 추가되는 위치 -->
  <div id="taskButtons"></div>
  <br>

  <button class="" id="line">line</button>
  <button class="" id="bar">bar</button>
  <button class="" id="doughnut">doughnut</button>

  <script>   
    const corenum = '<%=data.corenum%>';
    const tasknum = '<%=data.tasknum%>';

    const coreButtons = document.getElementById('coreButtons');
    for (let i = 1; i <= corenum; i++) {
      const button = document.createElement('button');
      button.textContent = `Core ${i}`;
      button.id = `core${i}Button`;
      button.addEventListener('click', function () { spread_data('core', i - 1); });
      coreButtons.appendChild(button);
    }

    const taskButtons = document.getElementById('taskButtons');
    for (let i = 1; i <= tasknum; i++) {
      const button = document.createElement('button');
      button.textContent = `Task ${i}`;
      button.id = `task${i}Button`;
      button.addEventListener('click', function () { spread_data('task', i - 1); });
      taskButtons.appendChild(button);
    }

    document.getElementById('line').addEventListener('click', function () { chart_type = 'line'; });
    document.getElementById('bar').addEventListener('click', function () { chart_type = 'bar'; });
    document.getElementById('doughnut').addEventListener('click', function () { chart_type = 'doughnut'; });

    let chart;
    let chart_type = 'line';

    async function getData(type, num) {
      let response = await fetch(`/${type}/${num}`);
      let data = await response.json();
      return await data;
    }
    const typecheck = (type) => {
      if (type == 'core'){
        return "task";
      } return "core";
    }

    async function spread_data(type, num) {
      let data = await getData(type, num);
      if (!data){
        return alert("파일이 입력되지 않았습니다.파일을 넣어주세요",);
      }

      const labels = new Array();
      if (type == 'core'){
        for(var i=0; i<tasknum; i++){
          labels.push(`${typecheck(type)}`+`${i+1}`);
        }
      }else{
        for(var i=0; i<corenum; i++){
          labels.push(`${typecheck(type)}`+`${i+1}`);
        }
      }

      let minData = data.min;
      let maxData = data.max;
      let avgData = data.avg;

      const profiler = document.getElementById('profiler').getContext('2d');

      if (chart) {
        chart.destroy();
      }

      chart = new Chart(profiler, {
        type: `${chart_type}`,
        data: {
          labels: labels,
          datasets: [{
            label: 'Min',
            data: minData,
            borderColor: 'rgba(255, 99, 132, 1)',
            backgroundColor: 'rgba(255, 99, 132, 0.2)',
          }, {
            label: 'Max',
            data: maxData,
            borderColor: 'rgba(75, 192, 192, 1)',
            backgroundColor: 'rgba(75, 192, 192, 0.2)',
          }, {
            label: 'Avg',
            data: avgData,
            borderColor: 'rgba(255, 206, 86, 1)',
            backgroundColor: 'rgba(255, 206, 86, 0.2)',
          }]
        },
        options: {
          maintainAspectRatio: false,
          scales: {
            y: {
              beginAtZero: true
            }
          }
        },
      });
    }
  </script>
</body>

</html>